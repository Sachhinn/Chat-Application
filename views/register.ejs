<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Register - Konnekt</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@1,500&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
    body {
        font-family: 'Inter', sans-serif;
        background: #f4f4f4;
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    .container {
        max-width: 400px;
        margin: 40px auto;
        background: #fff;
        padding: 24px;
        border-radius: 8px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    h2 {
        text-align: center;
        margin-bottom: 24px;
        font-size: 1.8em; /* Slightly larger base font size */
    }

    h1 {
        text-align: center;
        color: #7F00FF;
        font-family: 'Poppins', sans-serif;
        margin-bottom: 16px;
        font-size: 2.2em;
    }

    .form-group {
        margin-bottom: 16px;
        position: relative;
    }

    label {
        display: block;
        margin-bottom: 6px;
    }

    input[type="text"],
    input[type="file"],
    input[type="password"],
    textarea {
        width: 100%;
        padding: 10px;
        box-sizing: border-box;
        border: 1px solid #ccc;
        border-radius: 4px;
        transition: border-color 0.2s;
        font-size: 1em;
    }

    input:focus,
    textarea:focus {
        border-color: #7F00FF;
        outline: none;
    }

    button {
        width: 100%;
        padding: 12px; /* More padding for a bigger button */
        background: #7F00FF;
        color: #fff;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 1em;
        transition: background-color 0.2s;
    }

    button:hover {
        background: #9C27B0;
    }

    .login-link {
        text-align: center;
        margin-top: 16px;
    }

    .login-link a {
        color: #007bff;
        text-decoration: none;
    }

    .login-link a:hover {
        text-decoration: underline;
    }

    .preview-img {
        display: block;
        margin: 10px auto 0 auto;
        width: 100px; /* Use a fixed width */
        height: 100px; /* Use a fixed height */
        border-radius: 50%;
        box-shadow: 0 1px 4px rgba(0, 0, 0, 0.1);
        object-fit: cover; /* Ensures the image fills the space without stretching */
    }

    .shake {
        animation: shake 0.3s;
    }

    @keyframes shake {
        0% { transform: translateX(0); }
        25% { transform: translateX(-5px); }
        50% { transform: translateX(5px); }
        75% { transform: translateX(-5px); }
        100% { transform: translateX(0); }
    }

    .error-msg {
        color: #d8000c;
        background: #ffd2d2;
        padding: 8px 12px;
        border-radius: 4px;
        margin-bottom: 10px;
        font-size: 0.95em;
        display: none;
    }

    /* Media Query for Mobile Phones (screens up to 480px wide) */
    @media (max-width: 480px) {
        body {
            background: #fff; /* Make the background white on mobile for a cleaner look */
        }
        .container {
            max-width: 100%; /* Take up full width */
            margin: 0; /* Remove side margins */
            padding: 16px; /* Adjust padding for mobile */
            box-shadow: none; /* Remove shadow on full-width container */
            border-radius: 0; /* No border radius on mobile for a seamless feel */
        }
        h1 {
            font-size: 2em; /* Slightly smaller for mobile */
        }
        h2 {
            font-size: 1.6em; /* Slightly smaller for mobile */
        }
        button {
            padding: 14px; /* A bit more padding for an even better touch target */
        }
    }
</style>
</head>

<body>
    <div class="container">
        <h1>Konnekt</h1>
        <h2>Register</h2>
        <div class="error-msg" id="errorMsg"></div>
        <form id="registerForm" action="/register" method="POST" enctype="multipart/form-data">
            <div class="form-group">
                <label for="firstname">First Name<span style="color:red">*</span></label>
                <input type="text" id="firstname" name="firstName" required>
            </div>
            <div class="form-group">
                <label for="lastname">Last Name<span style="color:red">*</span></label>
                <input type="text" id="lastname" name="lastName" required>
            </div>
            <div class="form-group">
                <label for="username">Username<span style="color:red">*</span></label>
                <input type="text" id="username" name="username" required>
            </div>
            <div class="form-group">
                <label for="bio">Bio</label>
                <textarea id="bio" name="bio" rows="3"></textarea>
            </div>
            <div class="form-group">
                <label for="passwordView">Password<span style="color:red">*</span></label>
                <div style="position:relative;">
                    <input type="password" id="passwordView" name="password" required autocomplete="new-password"
                        style="padding-right:40px;">
                    <span id="togglePasswordView"
                        style="position:absolute; right:10px; top:50%; transform:translateY(-50%); cursor:pointer; color:#7F00FF;">
                        üëÅÔ∏è
                    </span>
                </div>
            </div>
            <div class="form-group">
                <label for="profilePic">Profile Picture</label>
                <input type="file" id="profilePic" name="avatar" accept="image/*">
                <img id="previewImg" class="preview-img" style="display:none;" alt="Profile Preview">
            </div>
            <button type="submit">Register</button>
        </form>
        <div class="login-link">
            <p>Already have an account? <a href="/login">Login</a></p>
        </div>
    </div>
    <script>
        // Password view toggle
        const passwordViewInput = document.getElementById('passwordView');
        const togglePasswordView = document.getElementById('togglePasswordView');
        togglePasswordView.addEventListener('click', function () {
            const type = passwordViewInput.getAttribute('type') === 'password' ? 'text' : 'password';
            passwordViewInput.setAttribute('type', type);
            this.textContent = type === 'password' ? 'üëÅÔ∏è' : 'üôà';
        });
        // Profile picture preview
        const profilePicInput = document.getElementById('profilePic');
        const previewImg = document.getElementById('previewImg');
        profilePicInput.addEventListener('change', function () {
            const file = this.files[0];
            if (file && file.type.startsWith('image/')) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    previewImg.src = e.target.result;
                    previewImg.style.display = 'block';
                };
                reader.readAsDataURL(file);
            } else {
                previewImg.src = '';
                previewImg.style.display = 'none';
            }
        });

        // Simple client-side validation and shake effect
        const form = document.getElementById('registerForm');
        const errorMsg = document.getElementById('errorMsg');
        form.addEventListener('submit', function (e) {
            errorMsg.style.display = 'none';
            let valid = true;
            ['firstname', 'lastname', 'username'].forEach(id => {
                const input = document.getElementById(id);
                if (!input.value.trim()) {
                    input.classList.add('shake');
                    valid = false;
                }
            });
            if (!valid) {
                e.preventDefault();
                errorMsg.textContent = 'Please fill in all required fields.';
                errorMsg.style.display = 'block';
                setTimeout(() => {
                    document.querySelectorAll('.shake').forEach(el => el.classList.remove('shake'));
                }, 400);
            }
        });
    </script>
</body>

</html>